-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Combat Rogue

DestroDummies.classRogueCombat = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

DestroDummies.mutex[mIndexBase + 1] = {};
DestroDummies.mutex[mIndexBase + 1].clipCombat = 0;
DestroDummies.mutex[mIndexBase + 1].clipOOCombat = 0;
DestroDummies.mutex[mIndexBase + 1][1] = DestroDummies:xlateString("Mangle")
DestroDummies.mutex[mIndexBase + 1][2] = DestroDummies:xlateString("Hemorrhage")
DestroDummies.mutex[mIndexBase + 1][3] = DestroDummies:xlateString("Blood Frenzy")
DestroDummies.mutex[mIndexBase + 1][4] = DestroDummies:xlateString("Tendon Rip")
DestroDummies.mutex[mIndexBase + 1][5] = DestroDummies:xlateString("Gore")
DestroDummies.mutex[mIndexBase + 1].count = 5;
local function PickCombat()
    DestroDummies:analysisInit();
    local clipSliceAndDice = 1.25;
    local clipRevealingStrike = 1;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Killing Spree"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Killing Spree"), 0);
    end;
    if ((DestroDummies:spellReady(DestroDummies:xlateString("Blade Flurry"))) and (not (DestroDummies:utilBuff(DestroDummies:xlateString("Blade Flurry"), 0, "player", "HELPFUL", nil)))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Blade Flurry"), 0);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Adrenaline Rush"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Adrenaline Rush"), 0);
    end;
    local varcomboPts = GetComboPoints("player", "target");
    if ((DestroDummies:distanceToTarget()) > (15)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Shadowstep"));
    end;
    if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Slice and Dice"), clipSliceAndDice, "player", "HELPFUL", nil))) and ((varcomboPts) > (0))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Slice and Dice"));
    end;
    if (((varcomboPts) == (4)) and (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Revealing Strike"), clipRevealingStrike)))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Revealing Strike"));
    end;
    if (((not (DestroDummies:utilDebuff(DestroDummies:xlateString("Rupture"), 0))) and ((DestroDummies:utilTimeToDie()) > (60))) and ((varcomboPts) == (5))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Rupture"));
    end;
    if ((((DestroDummies:utilTimeToDie()) > (60)) and ((DestroDummies:utilBuffInfo(DestroDummies:xlateString("Weakened Armor"), true, "target")) < (3))) and ((varcomboPts) < (5))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Expose Armor"));
    end;
    if ((varcomboPts) == (5)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Eviscerate"));
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Garrote"))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Garrote"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Sinister Strike"));
    return DestroDummies:analysisPick("Adrenaline Rush", nil);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    local clipPoisons = (5) * (60);
    if not (IsMounted()) then
        if (not (DestroDummies:utilWeaponEnhance(clipPoisons))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Poisons"));
        end;
    end;
    return DestroDummies:analysisPick(nil, nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classRogueCombat] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classRogueCombat] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 1;
