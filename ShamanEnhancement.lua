-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Enhancement Shaman

DestroDummies.classShamanEnhancement = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

DestroDummies.mutex[mIndexBase + 1] = {};
DestroDummies.mutex[mIndexBase + 1].clipOOCombat = 60;
DestroDummies.mutex[mIndexBase + 1].clipCombat = 5;
DestroDummies.mutex[mIndexBase + 1][1] = DestroDummies:xlateString("Lightning Shield")
DestroDummies.mutex[mIndexBase + 1][2] = DestroDummies:xlateString("Water Shield")
DestroDummies.mutex[mIndexBase + 1].count = 2;
local function PickCombat()
    DestroDummies:analysisInit();
    local clipWindfuryWeapon = 5;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Heroism"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Heroism"), 1);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Bloodlust"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Bloodlust"), 1);
    end;
    if ((DestroDummies:spellReady(DestroDummies:xlateString("Feral Spirit"))) and (not (DestroDummies:utilBoss()))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Feral Spirit"), 2);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Fire Elemental Totem"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Fire Elemental Totem"), 3);
    end;
    local varmTime;
    local varmCount;
    varmTime, varmCount = DestroDummies:utilBuffInfo(DestroDummies:xlateString("Maelstrom Weapon"), false, "player")
    local varallGood;
    local varmain;
    local varoff;
    varallGood, varmain, varoff = DestroDummies:utilWeaponEnhance(clipWindfuryWeapon)
    if (not (varmain)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Windfury Weapon"));
    end;
    if (not (varoff)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Flametongue Weapon"));
    end;
    if ((not (DestroDummies:utilTotem(DestroDummies:xlateString("Searing Totem")))) and (not (DestroDummies:utilTotem(DestroDummies:xlateString("Flametongue Totem"))))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Searing Totem"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Stormstrike"));
    DestroDummies:analysisAdd(DestroDummies:xlateString("Lava Lash"));
    if ((varmCount) == (5)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Lightning Bolt"));
    end;
    if (DestroDummies:utilBuff(DestroDummies:xlateString("Unleash Flame"), 0, "player", "HELPFUL", nil)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Flame Shock"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Unleash Elements"));
    DestroDummies:analysisAdd(DestroDummies:xlateString("Earth Shock"));
    DestroDummies:analysisAdd(DestroDummies:xlateString("Feral Spirit"));
    return DestroDummies:analysisPick(nil, nil);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    local clipWindfuryWeapon = (5) * (60);
    local clipFlametongueWeapon = (5) * (60);
    if not (IsMounted()) then
        local varallGood;
        local varmain;
        local varoff;
        varallGood, varmain, varoff = DestroDummies:utilWeaponEnhance(clipWindfuryWeapon)
        if (not (varmain)) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Windfury Weapon"));
        end;
        if (not (varoff)) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Flametongue Weapon"));
        end;
        if (not (DestroDummies:utilMxBuff(mIndexBase + 1))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Lightning Shield"));
        end;
    end;
    return DestroDummies:analysisPick(nil, nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classShamanEnhancement] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classShamanEnhancement] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 1;
