-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Demonology Warlock

DestroDummies.classWarlockDemonology = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

DestroDummies.mutex[mIndexBase + 1] = {};
DestroDummies.mutex[mIndexBase + 1].clipCombat = 0;
DestroDummies.mutex[mIndexBase + 1].clipOOCombat = 0;
DestroDummies.mutex[mIndexBase + 1][1] = DestroDummies:xlateString("Bane of Agony")
DestroDummies.mutex[mIndexBase + 1][2] = DestroDummies:xlateString("Bane of Doom")
DestroDummies.mutex[mIndexBase + 1][3] = DestroDummies:xlateString("Bane of Havoc")
DestroDummies.mutex[mIndexBase + 1].count = 3;
DestroDummies.mutex[mIndexBase + 2] = {};
DestroDummies.mutex[mIndexBase + 2].clipCombat = 1;
DestroDummies.mutex[mIndexBase + 2].clipOOCombat = 1;
DestroDummies.mutex[mIndexBase + 2][1] = DestroDummies:xlateString("Curse of the Elements")
DestroDummies.mutex[mIndexBase + 2][2] = DestroDummies:xlateString("Curse of Tongues")
DestroDummies.mutex[mIndexBase + 2][3] = DestroDummies:xlateString("Curse of Weakness")
DestroDummies.mutex[mIndexBase + 2][4] = DestroDummies:xlateString("Curse of Exhaustion")
DestroDummies.mutex[mIndexBase + 2].count = 4;
DestroDummies.mutex[mIndexBase + 3] = {};
DestroDummies.mutex[mIndexBase + 3].clipOOCombat = 300;
DestroDummies.mutex[mIndexBase + 3].clipCombat = 5;
DestroDummies.mutex[mIndexBase + 3][1] = DestroDummies:xlateString("Fel Armor")
DestroDummies.mutex[mIndexBase + 3][2] = DestroDummies:xlateString("Demon Armor")
DestroDummies.mutex[mIndexBase + 3].count = 2;
DestroDummies.mutex[mIndexBase + 4] = {};
DestroDummies.mutex[mIndexBase + 4].clipCombat = 1;
DestroDummies.mutex[mIndexBase + 4].clipOOCombat = 1;
DestroDummies.mutex[mIndexBase + 4][1] = DestroDummies:xlateString("Corruption")
DestroDummies.mutex[mIndexBase + 4][2] = DestroDummies:xlateString("Seed of Corruption")
DestroDummies.mutex[mIndexBase + 4].count = 2;
DestroDummies.mutex[mIndexBase + 5] = {};
DestroDummies.mutex[mIndexBase + 5].clipCombat = 1;
DestroDummies.mutex[mIndexBase + 5].clipOOCombat = 1;
DestroDummies.mutex[mIndexBase + 5][1] = DestroDummies:xlateString("Shadow and Flame")
DestroDummies.mutex[mIndexBase + 5][2] = DestroDummies:xlateString("Critical Mass")
DestroDummies.mutex[mIndexBase + 5][3] = DestroDummies:xlateString("Winter's Chill")
DestroDummies.mutex[mIndexBase + 5].count = 3;
DestroDummies.mutex[mIndexBase + 6] = {};
DestroDummies.mutex[mIndexBase + 6].clipCombat = 1;
DestroDummies.mutex[mIndexBase + 6].clipOOCombat = 1;
DestroDummies.mutex[mIndexBase + 6][1] = DestroDummies:xlateString("Heroism")
DestroDummies.mutex[mIndexBase + 6][2] = DestroDummies:xlateString("Bloodlust")
DestroDummies.mutex[mIndexBase + 6][3] = DestroDummies:xlateString("Time Warp")
DestroDummies.mutex[mIndexBase + 6][4] = DestroDummies:xlateString("Ancient Hysteria")
DestroDummies.mutex[mIndexBase + 6][5] = DestroDummies:xlateString("Improved Soul Fire")
DestroDummies.mutex[mIndexBase + 6].count = 5;
local varbossFight;
local varHaveSandF;
local varHaveImpSF;
local function preCombat()
    varbossFight = nil
    varHaveSandF = (DestroDummies:utilTalentCount(DestroDummies:xlateString("Shadow and Flame"))) > (1)
    varHaveImpSF = (DestroDummies:utilTalentCount(DestroDummies:xlateString("Improved Soul Fire"))) > (1)
end
DestroDummies.registry.preCombat[DestroDummies.classWarlockDemonology] = preCombat;

local function PickCombat()
    DestroDummies:analysisInit();
    if (DestroDummies:spellReady(DestroDummies:xlateString("Summon Doomguard"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Summon Doomguard"), 1);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Demonic Empowerment"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Demonic Empowerment"), 2);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Demon Soul"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Demon Soul"), 3);
    end;
    if ((DestroDummies:utilHealth("pet")) < (40)) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Health Funnel"), 4);
    end;
    varbossFight = (DestroDummies:utilBoss()) or (varbossFight)
    if ((((varbossFight) and (not (DestroDummies:utilBoss()))) and ((DestroDummies:utilTimeToDie()) < (5))) and ((UnitPower("player", SPELL_POWER_SOUL_SHARDS)) < (2))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Shadowburn"));
    end;
    if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Dark Intent"), 0, "player", "HELPFUL", nil))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Dark Intent"));
    end;
    if (not (DestroDummies:utilMxBuffByMe(mIndexBase + 3))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Fel Armor"));
    end;
    if (((not (DestroDummies:utilMxDebuffByMe(mIndexBase + 2))) and (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Curse of the Elements"), 0)))) and (DestroDummies:utilBoss())) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Curse of the Elements"));
    end;
    if (((((IsInRaid()) and (not ((DestroDummies.lastSpell == DestroDummies:xlateString("Shadow Bolt"))))) and (DestroDummies:utilBoss())) and (varHaveSandF)) and (not (DestroDummies:utilMxDebuff(mIndexBase + 5)))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Shadow Bolt"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Metamorphosis"));
    if ((not ((DestroDummies.lastSpell == DestroDummies:xlateString("Soul Fire")))) and (((((varHaveImpSF) and (not (DestroDummies:utilMxBuff(mIndexBase + 6))))) or (DestroDummies:utilBuff(DestroDummies:xlateString("Soulburn"), 0, "player", "HELPFUL", nil))))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Soul Fire"));
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Immolation Aura"))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Immolation Aura"));
    end;
    if ((not (DestroDummies:utilDebuffByMe(DestroDummies:xlateString("Immolate"), 0))) and (not ((DestroDummies.lastSpell == DestroDummies:xlateString("Immolate"))))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Immolate"));
    end;
    if ((not (DestroDummies:utilMxDebuffByMe(mIndexBase + 1))) and ((DestroDummies:utilTimeToDie()) > (15))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Bane of Doom"));
    end;
    if (not (DestroDummies:utilMxDebuffByMe(mIndexBase + 4))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Corruption"));
    end;
    if ((DestroDummies:distanceToTarget()) <= (11.10)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Shadowflame"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Hand of Gul'dan"));
    if (DestroDummies:utilBuff(DestroDummies:xlateString("Molten Core"), 0, "player", "HELPFUL", nil)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Incinerate"));
    end;
    if (DestroDummies:utilBuff(DestroDummies:xlateString("Decimation"), 0, "player", "HELPFUL", nil)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Soul Fire"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Incinerate"));
    DestroDummies:analysisAdd(DestroDummies:xlateString("Shadow Bolt"));
    return DestroDummies:analysisPick("Life Tap", nil);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    if not (IsMounted()) then
        if (not (DestroDummies:utilMxBuffByMe(mIndexBase + 3))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Fel Armor"));
        end;
        if (not (HasPetUI())) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Summon Felguard"));
        end;
        if (not (HasPetUI())) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Summon Imp"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Dark Intent"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Dark Intent"));
        end;
        if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Soul Harvest"), 0, "player", "HELPFUL", nil))) and ((((UnitPower("player", SPELL_POWER_SOUL_SHARDS)) < (3)) or ((DestroDummies:utilHealth("player")) < (95))))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Soul Harvest"));
        end;
    end;
    return DestroDummies:analysisPick("Life Tap", nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classWarlockDemonology] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classWarlockDemonology] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 6;
