-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Shadow Priest

DestroDummies.classPriestShadow = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

local varhaveMastery;
local function preCombat()
    varhaveMastery = (GetSpellInfo(DestroDummies:xlateString("Mastery")) ~= nil)
end
DestroDummies.registry.preCombat[DestroDummies.classPriestShadow] = preCombat;

local function PickCombat()
    DestroDummies:analysisInit();
    local clipVampiricTouch = 1;
    local clipShadowWordPain = 1;
    local clipDevouringPlague = 1;
    if (not IsInGroup()) then
        if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Power Word: Shield"), 0, "player", "HELPFUL", nil))) and (DestroDummies:spellReady(DestroDummies:xlateString("Power Word: Shield")))) then
            DestroDummies:altRecommend(DestroDummies:xlateString("Power Word: Shield"), 0);
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Inner Fire"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:altRecommend(DestroDummies:xlateString("Inner Fire"), 0);
        end;
    end;
    local varEvTime;
    local varEvCount;
    varEvTime, varEvCount = DestroDummies:utilBuffInfo(DestroDummies:xlateString("Evangelism"), false, "player")
    if (DestroDummies:spellReady(DestroDummies:xlateString("Shadowfiend"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Shadowfiend"), 1);
    end;
    if ((varEvCount) >= (5)) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Archangel"), 2);
    end;
    if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Shadowform"), 0, "player", "HELPFUL", nil))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Shadowform"));
    end;
    if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Vampiric Embrace"), 0, "player", "HELPFUL", nil))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Vampiric Embrace"));
    end;
    if (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Vampiric Touch"), clipVampiricTouch))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Vampiric Touch"));
    end;
    if (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Shadow Word: Pain"), clipShadowWordPain))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Shadow Word: Pain"));
    end;
    if (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Devouring Plague"), clipDevouringPlague))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Devouring Plague"));
    end;
    if ((((not (varhaveMastery)) or (DestroDummies:utilBuff(DestroDummies:xlateString("Shadow Orb"), 0, "player", "HELPFUL", nil))) or ((DestroDummies:utilBuffTime(DestroDummies:xlateString("Empowered Shadow"))) > (6.50)))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Mind Blast"));
    end;
    if ((DestroDummies:utilHealth("target")) <= (25)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Shadow Word: Death"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Mind Flay"));
    return DestroDummies:analysisPick("Shoot", nil);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    local clipPowerWordFortitude = 300;
    local clipInnerFire = 300;
    local clipVampiricEmbrace = 300;
    if not (IsMounted()) then
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Power Word: Fortitude"), clipPowerWordFortitude, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Power Word: Fortitude"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Inner Fire"), clipInnerFire, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Inner Fire"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Vampiric Embrace"), clipVampiricEmbrace, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Vampiric Embrace"));
        end;
        if (((not (DestroDummies:utilBuff(DestroDummies:xlateString("Power Word: Shield"), 0, "player", "HELPFUL", nil))) and (DestroDummies:spellReady(DestroDummies:xlateString("Power Word: Shield")))) and ((not IsInGroup()))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Power Word: Shield"));
        end;
    end;
    return DestroDummies:analysisPick(nil, nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classPriestShadow] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classPriestShadow] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 0;
