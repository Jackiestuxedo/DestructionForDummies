-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Fury Warrior

DestroDummies.classWarriorFury = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

local varstrikeReady = 1;
DestroDummies.mutex[mIndexBase + 1] = {};
DestroDummies.mutex[mIndexBase + 1].clipCombat = 0;
DestroDummies.mutex[mIndexBase + 1].clipOOCombat = 0;
DestroDummies.mutex[mIndexBase + 1][1] = DestroDummies:xlateString("Battle Shout")
DestroDummies.mutex[mIndexBase + 1][2] = DestroDummies:xlateString("Blessing of Might")
DestroDummies.mutex[mIndexBase + 1].count = 2;
local function spellSent(varspell)
    if (varspell) == (DestroDummies:xlateString("Heroic Strike")) then
        varstrikeReady = nil
    end;
end
DestroDummies.registry.spellSent[DestroDummies.classWarriorFury] = spellSent;

local function preCombat()
    varstrikeReady = 1
end
DestroDummies.registry.preCombat[DestroDummies.classWarriorFury] = preCombat;

local function postSpell(varspell, varsuccess)
    if (varspell) == (DestroDummies:xlateString("Heroic Strike")) then
        varstrikeReady = 1
    end;
end
DestroDummies.registry.postSpell[DestroDummies.classWarriorFury] = postSpell;

local function PickCombat()
    DestroDummies:analysisInit();
    if DestroDummies:utilBoss() then
        local varsunderTime;
        local varsunderCount;
        varsunderTime, varsunderCount = DestroDummies:utilBuffInfo(DestroDummies:xlateString("Sunder Armor"), true, "target")
        if (((varsunderCount) < (3)) or ((varsunderTime) < (6))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Sunder Armor"));
        end;
        if (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Demoralizing Shout"), 0))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Demoralizing Shout"));
        end;
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Death Wish"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Death Wish"), 1);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Recklessness"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Recklessness"), 2);
    end;
    if (((varstrikeReady) and (DestroDummies:spellReady(DestroDummies:xlateString("Heroic Strike")))) and ((((DestroDummies:unitPowerAfterCast() * 100) / UnitPowerMax("player"))) > (50))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Heroic Strike"), 3);
    end;
    if ((DestroDummies:utilBuff(DestroDummies:xlateString("Bloodsurge"), 0, "player", "HELPFUL", nil)) and ((DestroDummies:utilBuffTime(DestroDummies:xlateString("Bloodsurge"))) < (1.75))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Slam"));
    end;
    if (not (DestroDummies:utilMxBuff(mIndexBase + 1))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Battle Shout"));
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Victory Rush"))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Victory Rush"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Bloodthirst"));
    if (DestroDummies:utilStance(3)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Whirlwind"));
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Execute"))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Execute"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Slam"));
    return DestroDummies:analysisPick(nil, nil);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    return DestroDummies:analysisPick(nil, nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classWarriorFury] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classWarriorFury] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 1;
