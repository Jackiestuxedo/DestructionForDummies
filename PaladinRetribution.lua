-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Retribution Paladin

DestroDummies.classPaladinRetribution = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

DestroDummies.mutex[mIndexBase + 1] = {};
DestroDummies.mutex[mIndexBase + 1].clipOOCombat = 300;
DestroDummies.mutex[mIndexBase + 1].clipCombat = 5;
DestroDummies.mutex[mIndexBase + 1][1] = DestroDummies:xlateString("Seal of Righteousness")
DestroDummies.mutex[mIndexBase + 1][2] = DestroDummies:xlateString("Seal of Justice")
DestroDummies.mutex[mIndexBase + 1][3] = DestroDummies:xlateString("Seal of Insight")
DestroDummies.mutex[mIndexBase + 1][4] = DestroDummies:xlateString("Seal of Truth")
DestroDummies.mutex[mIndexBase + 1].count = 4;
DestroDummies.mutex[mIndexBase + 2] = {};
DestroDummies.mutex[mIndexBase + 2].clipCombat = 0;
DestroDummies.mutex[mIndexBase + 2].clipOOCombat = 0;
DestroDummies.mutex[mIndexBase + 2][1] = DestroDummies:xlateString("Retribution Aura")
DestroDummies.mutex[mIndexBase + 2][2] = DestroDummies:xlateString("Devotion Aura")
DestroDummies.mutex[mIndexBase + 2][3] = DestroDummies:xlateString("Concentration Aura")
DestroDummies.mutex[mIndexBase + 2][4] = DestroDummies:xlateString("Resistance Aura")
DestroDummies.mutex[mIndexBase + 2][5] = DestroDummies:xlateString("Crusader Aura")
DestroDummies.mutex[mIndexBase + 2].count = 5;
local varhaveGoE = nil;
local function preCombat()
    varhaveGoE = DestroDummies:utilHasGlyph(DestroDummies:xlateString("Glyph of Exorcism"))
end
DestroDummies.registry.preCombat[DestroDummies.classPaladinRetribution] = preCombat;

local function PickCombat()
    DestroDummies:analysisInit();
    local clipInquisition = 3;
    DestroDummies:altRecommend(DestroDummies:xlateString("Zealotry"), 0);
    if (not (DestroDummies:utilMxBuff(mIndexBase + 1))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Seal of Righteousness"));
    end;
    if (not (DestroDummies:utilMxBuffByMe(mIndexBase + 2))) or (DestroDummies:utilBuff(DestroDummies:xlateString("Crusader Aura"), 0, "player", "HELPFUL", "player")) then
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Retribution Aura"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Retribution Aura"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Devotion Aura"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Devotion Aura"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Concentration Aura"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Concentration Aura"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Resistance Aura"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Resistance Aura"));
        end;
    end;
    if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Inquisition"), clipInquisition, "player", "HELPFUL", nil))) and (((UnitPower("player", SPELL_POWER_HOLY_POWER)) >= (3)))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Inquisition"));
    end;
    if ((UnitPower("player", SPELL_POWER_HOLY_POWER)) == (5)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Templar's Verdict"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Execution Sentence"));
    DestroDummies:analysisAdd(DestroDummies:xlateString("Hammer of Wrath"));
    DestroDummies:analysisAdd(DestroDummies:xlateString("Exorcism"));
    DestroDummies:analysisAdd(DestroDummies:xlateString("Crusader Strike"));
    DestroDummies:analysisAdd(DestroDummies:xlateString("Judgement"));
    if ((UnitPower("player", SPELL_POWER_HOLY_POWER)) >= (3)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Templar's Verdict"));
    end;
    return DestroDummies:analysisPick("Divine Plea", nil);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    if not (DestroDummies:utilMxBuffByMe(mIndexBase + 2)) then
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Retribution Aura"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Retribution Aura"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Devotion Aura"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Devotion Aura"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Concentration Aura"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Concentration Aura"));
        end;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Resistance Aura"), 0, "player", "HELPFUL", nil))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Resistance Aura"));
        end;
    end;
    if (not (DestroDummies:utilMxBuff(mIndexBase + 1))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Seal of Righteousness"));
    end;
    if ((DestroDummies:utilHealth("player")) < (95)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Holy Light"));
    end;
    return DestroDummies:analysisPick(nil, nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classPaladinRetribution] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classPaladinRetribution] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 2;
