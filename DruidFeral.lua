-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Feral Druid

DestroDummies.classDruidFeral = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

DestroDummies.mutex[mIndexBase + 1] = {};
DestroDummies.mutex[mIndexBase + 1].clipCombat = 0;
DestroDummies.mutex[mIndexBase + 1].clipOOCombat = 0;
DestroDummies.mutex[mIndexBase + 1][1] = DestroDummies:xlateString("Horn of Winter")
DestroDummies.mutex[mIndexBase + 1][2] = DestroDummies:xlateString("Strength of Earth Totem")
DestroDummies.mutex[mIndexBase + 1][3] = DestroDummies:xlateString("Battle Shout")
DestroDummies.mutex[mIndexBase + 1][4] = DestroDummies:xlateString("Roar of Courage")
DestroDummies.mutex[mIndexBase + 1].count = 4;
DestroDummies.mutex[mIndexBase + 2] = {};
DestroDummies.mutex[mIndexBase + 2].clipCombat = 5;
DestroDummies.mutex[mIndexBase + 2].clipOOCombat = 5;
DestroDummies.mutex[mIndexBase + 2][1] = DestroDummies:xlateString("Mark of the Wild")
DestroDummies.mutex[mIndexBase + 2][2] = DestroDummies:xlateString("Blessing of Kings")
DestroDummies.mutex[mIndexBase + 2].count = 2;
DestroDummies.mutex[mIndexBase + 3] = {};
DestroDummies.mutex[mIndexBase + 3].clipCombat = 1.50;
DestroDummies.mutex[mIndexBase + 3].clipOOCombat = 1.50;
DestroDummies.mutex[mIndexBase + 3][1] = DestroDummies:xlateString("Mangle")
DestroDummies.mutex[mIndexBase + 3][2] = DestroDummies:xlateString("Trauma")
DestroDummies.mutex[mIndexBase + 3].count = 2;
DestroDummies.mutex[mIndexBase + 4] = {};
DestroDummies.mutex[mIndexBase + 4].clipCombat = 0;
DestroDummies.mutex[mIndexBase + 4].clipOOCombat = 0;
DestroDummies.mutex[mIndexBase + 4][1] = DestroDummies:xlateString("Faerie Fire")
DestroDummies.mutex[mIndexBase + 4][2] = DestroDummies:xlateString("Faerie Swarm")
DestroDummies.mutex[mIndexBase + 4][3] = DestroDummies:xlateString("Tear Armor")
DestroDummies.mutex[mIndexBase + 4][4] = DestroDummies:xlateString("Corrosive Spit")
DestroDummies.mutex[mIndexBase + 4][5] = DestroDummies:xlateString("Expose Armor")
DestroDummies.mutex[mIndexBase + 4][6] = DestroDummies:xlateString("Sunder Armor")
DestroDummies.mutex[mIndexBase + 4].count = 6;
local varnewRoarTime = {};
varnewRoarTime[1] = 14000;
varnewRoarTime[2] = 19000;
varnewRoarTime[3] = 24000;
varnewRoarTime[4] = 29000;
varnewRoarTime[5] = 34000;
local varhaveGlyphMaul;
local varFailSpell;
local varFreeSpell;
local function preCombat()
    varhaveGlyphMaul = DestroDummies:utilHasGlyph(DestroDummies:xlateString("Glyph of Maul"))
end
DestroDummies.registry.preCombat[DestroDummies.classDruidFeral] = preCombat;

local function PickCombat()
    DestroDummies:analysisInit();
    if DestroDummies:utilBuff(DestroDummies:xlateString("Bear Form"), 0, "player", "HELPFUL", nil) then
        varFailSpell = DestroDummies:xlateString("Enrage")
        varFreeSpell = DestroDummies:xlateString("Faerie Fire")
        local varthreatTank;
        local varthreatStatus;
        varthreatTank, varthreatStatus = DestroDummies:utilThreat()
        if (not (varthreatTank)) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Growl"));
        end;
        if (DestroDummies:spellReady(DestroDummies:xlateString("Berserk"))) then
            DestroDummies:altRecommend(DestroDummies:xlateString("Berserk"), 1);
        end;
        if ((DestroDummies:spellReady(DestroDummies:xlateString("Growl"))) and ((varthreatStatus) < (3))) then
            DestroDummies:altRecommend(DestroDummies:xlateString("Growl"), 2);
        end;
        if (DestroDummies:spellReady(DestroDummies:xlateString("Barkskin"))) then
            DestroDummies:altRecommend(DestroDummies:xlateString("Barkskin"), 4);
        end;
        local varLacTime;
        local varLacCount;
        varLacTime, varLacCount = DestroDummies:utilBuffInfo(DestroDummies:xlateString("Lacerate"), true, "target")
        if DestroDummies:utilBoss() then
            if (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Demoralizing Roar"), 0))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Demoralizing Roar"));
            end;
            DestroDummies:analysisAdd(DestroDummies:xlateString("Mangle"));
            if ((varLacCount) < (3)) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Lacerate"));
            end;
            if (((((not (DestroDummies:utilBuff(DestroDummies:xlateString("Pulverize"), 0, "player", "HELPFUL", nil))) and ((varLacCount) > (1)))) or ((((DestroDummies:utilBuffTime(DestroDummies:xlateString("Pulverize"))) < (3)) and ((varLacCount) == (3)))))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Pulverize"));
            end;
            if ((((DestroDummies:unitPowerAfterCast() * 100) / UnitPowerMax("player"))) > (70)) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Maul"));
            end;
            if (not (DestroDummies:utilMxDebuff(mIndexBase + 4))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Faerie Swarm"));
            end;
            if (not (DestroDummies:utilMxDebuff(mIndexBase + 4))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Faerie Fire"));
            end;
            DestroDummies:analysisAdd(DestroDummies:xlateString("Thrash"));
            if (DestroDummies:spellReady(DestroDummies:xlateString("Swipe"))) then
                DestroDummies:altRecommend(DestroDummies:xlateString("Swipe"), 3);
            end;
            if (DestroDummies:spellReady(DestroDummies:xlateString("Thrash"))) then
                DestroDummies:altRecommend(DestroDummies:xlateString("Thrash"), 3);
            end;
            if (DestroDummies:spellReady(DestroDummies:xlateString("Maul"))) then
                DestroDummies:altRecommend(DestroDummies:xlateString("Maul"), 3);
            end;
        else
            DestroDummies:analysisAdd(DestroDummies:xlateString("Swipe"));
            DestroDummies:analysisAdd(DestroDummies:xlateString("Thrash"));
            if (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Demoralizing Roar"), 0))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Demoralizing Roar"));
            end;
            if (DestroDummies:utilBuff(DestroDummies:xlateString("Berserk"), 0, "player", "HELPFUL", nil)) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Mangle"));
            end;
            if (varhaveGlyphMaul) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Maul"));
            end;
            if (((DestroDummies:unitPowerAfterCast() * 100) / UnitPowerMax("player"))) >= (50) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Mangle"));
                if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Pulverize"), 0, "player", "HELPFUL", nil))) and ((varLacCount) > (1))) then
                    DestroDummies:analysisAdd(DestroDummies:xlateString("Pulverize"));
                end;
                if (((DestroDummies:utilBuffTime(DestroDummies:xlateString("Pulverize"))) < (3)) and ((varLacCount) == (3))) then
                    DestroDummies:analysisAdd(DestroDummies:xlateString("Pulverize"));
                end;
                if (not (DestroDummies:utilMxDebuff(mIndexBase + 4))) then
                    DestroDummies:analysisAdd(DestroDummies:xlateString("Faerie Swarm"));
                end;
                if (not (DestroDummies:utilMxDebuff(mIndexBase + 4))) then
                    DestroDummies:analysisAdd(DestroDummies:xlateString("Faerie Fire"));
                end;
                DestroDummies:analysisAdd(DestroDummies:xlateString("Thrash"));
                DestroDummies:analysisAdd(DestroDummies:xlateString("Lacerate"));
            end;
        end;
    else
        local varcomboPts;
        local vartRip;
        local vartRoar;
        local vartThrash;
        varFailSpell = DestroDummies:xlateString("Tiger's Fury")
        varFreeSpell = nil
        local clipSavageRoar = 1;
        local clipRip = 1;
        local clipRake = 1;
        if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Cat Form"), 0, "player", "HELPFUL", nil))) then
            return DestroDummies:xlateString("Cat Form");
        end;
        if (DestroDummies:spellReady(DestroDummies:xlateString("Berserk"))) then
            DestroDummies:altRecommend(DestroDummies:xlateString("Berserk"), 1);
        end;
        if (DestroDummies:spellReady(DestroDummies:xlateString("Force of Nature"))) then
            DestroDummies:altRecommend(DestroDummies:xlateString("Force of Nature"), 2);
        end;
        if ((((DestroDummies:utilBoss()) or (IsInGroup()))) and (not (DestroDummies:utilMxDebuff(mIndexBase + 4)))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Faerie Swarm"));
        end;
        if ((((DestroDummies:utilBoss()) or (IsInGroup()))) and (not (DestroDummies:utilMxDebuff(mIndexBase + 4)))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Faerie Fire"));
        end;
        if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Savage Roar"), clipSavageRoar, "player", "HELPFUL", nil))) and (DestroDummies:spellReady(DestroDummies:xlateString("Savage Roar")))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Savage Roar"));
        end;
        vartRip = DestroDummies:utilDebuffTime(DestroDummies:xlateString("Rip"))
        vartRip = DestroDummies:utilDebuffTime(DestroDummies:xlateString("Savage Roar"))
        vartThrash = DestroDummies:utilDebuffTime(DestroDummies:xlateString("Thrash"))
        varcomboPts = GetComboPoints("player", "target")
        if (varcomboPts) == (5) then
            if (((DestroDummies:utilHealth("target")) < (25)) and ((vartRip) < (3))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Ferocious Bite"));
            end;
            if (((vartRip) >= (6)) and ((vartRoar) >= (6))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Ferocious Bite"));
            end;
            if ((vartRip) < (3)) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Rip"));
            end;
        end;
        if (not (DestroDummies:utilDebuffByMe(DestroDummies:xlateString("Rake"), clipRake))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Rake"));
        end;
        if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Omen of Clarity"), 0, "player", "HELPFUL", nil))) and ((vartThrash) < (6))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Thrash"));
        end;
        if (DestroDummies:spellReady(DestroDummies:xlateString("Ravage"))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Ravage"));
        end;
        if (DestroDummies:spellReady(DestroDummies:xlateString("Shred"))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Shred"));
        end;
        DestroDummies:analysisAdd(DestroDummies:xlateString("Mangle"));
    end;
    return DestroDummies:analysisPick(varFailSpell, varFreeSpell);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    if ((not (IsMounted())) and (not (DestroDummies:utilMxBuff(mIndexBase + 2)))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Mark of the Wild"));
    end;
    return DestroDummies:analysisPick(nil, nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classDruidFeral] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classDruidFeral] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 4;
