-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Subtlety Rogue

DestroDummies.classRogueSubtlety = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

local varhaveER;
local function preCombat()
    varhaveER = (DestroDummies:utilTalentCount(DestroDummies:xlateString("Energetic Recovery"))) > (0)
end
DestroDummies.registry.preCombat[DestroDummies.classRogueSubtlety] = preCombat;

local function PickCombat()
    DestroDummies:analysisInit();
    local clipSliceAndDice = 2;
    local clipRecuperate = 3;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Shadow Dance"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Shadow Dance"), 0);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Preparation"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Preparation"), 0);
    end;
    local varcomboPts = GetComboPoints("player", "target");
    if (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Hemorrhage"), 0))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Hemorrhage"));
    end;
    if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Slice and Dice"), clipSliceAndDice, "player", "HELPFUL", nil))) and ((varcomboPts) > (0))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Slice and Dice"));
    end;
    if (varcomboPts) == (5) then
        if (not (DestroDummies:utilDebuff(DestroDummies:xlateString("Rupture"), 0))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Rupture"));
        end;
        if ((DestroDummies:utilBuffTime(DestroDummies:xlateString("Slice and Dice"))) < (6)) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Slice and Dice"));
        end;
        if ((varhaveER) and (not (DestroDummies:utilBuff(DestroDummies:xlateString("Recuperate"), clipRecuperate, "player", "HELPFUL", nil)))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Recuperate"));
        end;
        DestroDummies:analysisAdd(DestroDummies:xlateString("Eviscerate"));
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Ambush"))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Ambush"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Backstab"));
    return DestroDummies:analysisPick(nil, nil);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    local clipPoisons = (5) * (60);
    if not (IsMounted()) then
        if (not (DestroDummies:utilWeaponEnhance(clipPoisons))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Poisons"));
        end;
    end;
    if ((DestroDummies:utilBoss()) and (not (DestroDummies:utilBuff(DestroDummies:xlateString("Stealth"), 0, "player", "HELPFUL", nil)))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Stealth"));
    end;
    if ((DestroDummies:utilBoss()) and (DestroDummies:spellReady(DestroDummies:xlateString("Premeditation")))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Premeditation"));
    end;
    return DestroDummies:analysisPick(nil, nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classRogueSubtlety] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classRogueSubtlety] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 0;
