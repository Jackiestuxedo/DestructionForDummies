-- Autogenerated file.  Do not edit.  All changes will be lost
--
-- Definition of Blood Deathknight

DestroDummies.classDeathknightBlood = DestroDummies.lastClassVal + 1;
DestroDummies.lastClassVal = DestroDummies.lastClassVal + 1;

local mIndexBase = DestroDummies.lastMutexIndex;

DestroDummies.mutex[mIndexBase + 1] = {};
DestroDummies.mutex[mIndexBase + 1].clipCombat = 0;
DestroDummies.mutex[mIndexBase + 1].clipOOCombat = 0;
DestroDummies.mutex[mIndexBase + 1][1] = DestroDummies:xlateString("Horn of Winter")
DestroDummies.mutex[mIndexBase + 1][2] = DestroDummies:xlateString("Strength of Earth Totem")
DestroDummies.mutex[mIndexBase + 1][3] = DestroDummies:xlateString("Battle Shout")
DestroDummies.mutex[mIndexBase + 1][4] = DestroDummies:xlateString("Roar of Courage")
DestroDummies.mutex[mIndexBase + 1].count = 4;
DestroDummies.mutex[mIndexBase + 2] = {};
DestroDummies.mutex[mIndexBase + 2].clipCombat = 5;
DestroDummies.mutex[mIndexBase + 2].clipOOCombat = 5;
DestroDummies.mutex[mIndexBase + 2][1] = DestroDummies:xlateString("Mark of the Wild")
DestroDummies.mutex[mIndexBase + 2][2] = DestroDummies:xlateString("Blessing of Kings")
DestroDummies.mutex[mIndexBase + 2].count = 2;
DestroDummies.mutex[mIndexBase + 3] = {};
DestroDummies.mutex[mIndexBase + 3].clipCombat = 1.50;
DestroDummies.mutex[mIndexBase + 3].clipOOCombat = 1.50;
DestroDummies.mutex[mIndexBase + 3][1] = DestroDummies:xlateString("Mangle")
DestroDummies.mutex[mIndexBase + 3][2] = DestroDummies:xlateString("Trauma")
DestroDummies.mutex[mIndexBase + 3].count = 2;
DestroDummies.mutex[mIndexBase + 4] = {};
DestroDummies.mutex[mIndexBase + 4].clipCombat = 0;
DestroDummies.mutex[mIndexBase + 4].clipOOCombat = 0;
DestroDummies.mutex[mIndexBase + 4][1] = DestroDummies:xlateString("Faerie Fire")
DestroDummies.mutex[mIndexBase + 4][2] = DestroDummies:xlateString("Faerie Swarm")
DestroDummies.mutex[mIndexBase + 4][3] = DestroDummies:xlateString("Tear Armor")
DestroDummies.mutex[mIndexBase + 4][4] = DestroDummies:xlateString("Corrosive Spit")
DestroDummies.mutex[mIndexBase + 4][5] = DestroDummies:xlateString("Expose Armor")
DestroDummies.mutex[mIndexBase + 4][6] = DestroDummies:xlateString("Sunder Armor")
DestroDummies.mutex[mIndexBase + 4].count = 6;
local varstartTime;
local varwindow = {};
local varnWindows = 5;
local vardoDND;
function DestroDummies:genfunc_rotateWindows()
    local varnow;
    local vari;
    varnow = math.floor(GetTime())
    while (varnow) > (varstartTime) do
        vari = (varnWindows) - (2)
        while (vari) >= (0) do
            varwindow[(vari) + (1)] = varwindow[vari]
            vari = (vari) - (1)
        end;
        varwindow[0] = 0
        varstartTime = (varstartTime) + (1)
    end;
end

local function preCombat()
    local vari;
    vari = 0
    while (vari) < (varnWindows) do
        varwindow[vari] = 0
        vari = (vari) + (1)
    end;
    varstartTime = math.floor(GetTime())
    vardoDND = nil
end
DestroDummies.registry.preCombat[DestroDummies.classDeathknightBlood] = preCombat;

local function takeDamage(varamount)
    DestroDummies:genfunc_rotateWindows();
    varwindow[0] = (varwindow[0]) + (varamount)
end
DestroDummies.registry.takeDamage[DestroDummies.classDeathknightBlood] = takeDamage;

local function spellSent(varspell)
    if (varspell) == (DestroDummies:xlateString("Death and Decay")) then
        vardoDND = true
    end;
end
DestroDummies.registry.spellSent[DestroDummies.classDeathknightBlood] = spellSent;

local function PickCombat()
    DestroDummies:analysisInit();
    if (DestroDummies:spellReady(DestroDummies:xlateString("Dancing Rune Weapon"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Dancing Rune Weapon"), 1);
    end;
    if ((not (HasPetUI())) and (DestroDummies:spellReady(DestroDummies:xlateString("Raise Dead")))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Raise Dead"), 2);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Death and Decay"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Death and Decay"), 3);
    end;
    if (DestroDummies:spellReady(DestroDummies:xlateString("Empower Rune Weapon"))) then
        DestroDummies:altRecommend(DestroDummies:xlateString("Empower Rune Weapon"), 4);
    end;
    local clipBladeBarrier = 3;
    if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Blood Presence"), 0, "player", "HELPFUL", nil))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Blood Presence"));
    end;
    if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Bone Shield"), 0, "player", "HELPFUL", nil))) and (DestroDummies:utilHaveRunes(0, 0, 1))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Bone Shield"));
    end;
    if (not ((not IsInGroup()))) and (not (DestroDummies:utilOnTank())) then
        local varthreatTank;
        local varthreatStatus;
        varthreatTank, varthreatStatus = DestroDummies:utilThreat()
        if (varthreatTank) == (0) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Dark Command"));
            if (not ((UnitIsTapped("target") and not UnitIsTappedByPlayer("target")))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Death Grip"));
            end;
        end;
        if ((varthreatTank) == (0)) or ((varthreatStatus) ~= (3)) then
            if ((((DestroDummies:unitPowerAfterCast() * 100) / UnitPowerMax("player"))) >= (30)) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Rune Strike"));
            end;
            if ((vardoDND) and (DestroDummies:utilHaveRunes(0, 0, 1))) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Death and Decay"));
            end;
            if (DestroDummies:utilHaveRunes(1, 0, 0)) then
                DestroDummies:analysisAdd(DestroDummies:xlateString("Heart Strike"));
            end;
        end;
    end;
    if ((DestroDummies:utilHealth("player")) <= (50)) and (DestroDummies:utilHaveRunes(0, 1, 1)) then
        DestroDummies:genfunc_rotateWindows();
        local vartotalDam = ((((varwindow[0]) + (varwindow[1])) + (varwindow[2])) + (varwindow[3])) + (varwindow[4]);
        local varmaxHP = UnitHealthMax("player");
        local varcurHP = UnitHealth("player");
        local varmissHP = (varmaxHP) - (varcurHP);
        local vardsHP = (0.20) * (vartotalDam);
        if (vardsHP) < ((0.07) * (varmaxHP)) then
            vardsHP = (0.07) * (varmaxHP)
        end;
        if ((vardsHP) >= (((0.15) * (varmissHP)))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Death Strike"));
        end;
    end;
    if (((not (DestroDummies:utilDebuffByMe(DestroDummies:xlateString("Frost Fever"), 0))) and (not (DestroDummies:utilDebuffByMe(DestroDummies:xlateString("Blood Plague"), 0))))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Outbreak"));
    end;
    if (((((not (DestroDummies:utilDebuffByMe(DestroDummies:xlateString("Frost Fever"), 0))) and (not ((DestroDummies.lastSpell == DestroDummies:xlateString("Icy Touch"))))) and (not ((DestroDummies.lastSpell == DestroDummies:xlateString("Outbreak"))))) and (DestroDummies:utilHaveRunes(0, 1, 0)))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Icy Touch"));
    end;
    if ((((not (DestroDummies:utilDebuffByMe(DestroDummies:xlateString("Blood Plague"), 0))) and (not ((DestroDummies.lastSpell == DestroDummies:xlateString("Outbreak"))))) and (DestroDummies:utilHaveRunes(0, 0, 1)))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Plague Strike"));
    end;
    if ((DestroDummies:utilHealth("target")) < (35)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Soul Reaper"));
    end;
    if (((DestroDummies:utilRuneCount(3)) == (2)) and ((DestroDummies:utilRuneCount(2)) == (2))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Death Strike"));
    end;
    if ((DestroDummies:utilRuneCount(1)) == (2)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Heart Strike"));
    end;
    if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Blade Barrier"), clipBladeBarrier, "player", "HELPFUL", nil))) and (DestroDummies:utilHaveRunes(1, 0, 0))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Heart Strike"));
    end;
    if ((DestroDummies:utilRuneCount(1)) > (1)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Blood Tap"));
    end;
    if ((((DestroDummies:unitPowerAfterCast() * 100) / UnitPowerMax("player"))) >= (30)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Rune Strike"));
    end;
    if ((((DestroDummies:unitPowerAfterCast() * 100) / UnitPowerMax("player"))) >= (50)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Death Coil"));
    end;
    if ((vardoDND) and ((DestroDummies:utilRuneCount(2)) >= (1))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Death and Decay"));
    end;
    if ((DestroDummies:utilRuneCount(1)) >= (1)) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Heart Strike"));
    end;
    DestroDummies:analysisAdd(DestroDummies:xlateString("Horn of Winter"));
    return DestroDummies:analysisPick(nil, nil);
end;

local function PickNoCombat()
    DestroDummies:analysisInit();
    if (not (DestroDummies:utilBuff(DestroDummies:xlateString("Blood Presence"), 0, "player", "HELPFUL", nil))) then
        DestroDummies:analysisAdd(DestroDummies:xlateString("Blood Presence"));
    end;
    if not (IsMounted()) then
        if ((not (DestroDummies:utilBuff(DestroDummies:xlateString("Bone Shield"), 0, "player", "HELPFUL", nil))) and (DestroDummies:spellReady(DestroDummies:xlateString("Bone Shield")))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Bone Shield"));
        end;
        if (not (DestroDummies:utilMxBuff(mIndexBase + 1))) then
            DestroDummies:analysisAdd(DestroDummies:xlateString("Horn of Winter"));
        end;
    end;
    return DestroDummies:analysisPick(nil, nil);
end;

-- populate our registries
DestroDummies.registry.decideCombat[DestroDummies.classDeathknightBlood] = PickCombat;
DestroDummies.registry.decideNoCombat[DestroDummies.classDeathknightBlood] = PickNoCombat;
DestroDummies.lastMutexIndex = mIndexBase + 4;
